# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  phone: String!
  address: String!
  personal: String!
  nickname: String!
  profilePhoto: String!
  isPhoto: Boolean!
  firstMessage: String!
  money: Int!
}

type ProductMainCategory {
  id: String!
  category: String!
}

type ProductSubCategory {
  id: String!
  category: String!
  productMainCategory: ProductMainCategory!
}

type Board {
  number: Int!
  writer: String!
  title: String!
  contents: String!
}

type ProductDetail {
  id: String!
  gender: String!
  season: String!
  size: String!
  brand: String!
  origin: String!
  stock: Int!
  color: String!
}

type ProductCart {
  id: String!
  productId: String!
}

type ProductTag {
  id: String!
  name: String!
  products: [Product!]!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Int!
  isSoldout: Boolean!
  productDetail: ProductDetail!
  productCart: ProductCart!
  productSubCategory: ProductSubCategory!
  productTags: [ProductTag!]!
}

type Payment {
  id: String!
  impUid: String!
  amount: Int!
  status: PAYMENT_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  fetchBoards: [Board!]!
  fetchProducts: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchUsers: [User!]!
  fetchUser: User!
}

type Mutation {
  createBoard(writer: String!, title: String!, contents: String!, createBoardInput: createBoardInput!): String!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  createMainCateGory(category: String!): ProductMainCategory!
  createSubCategory(category: String!, productMainCategoryId: String!): ProductSubCategory!
  createPayment(impUid: String!, amount: Float!): Payment!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser: Boolean!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
}

input createBoardInput {
  writer: String!
  title: String!
  contents: String!
}

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  createProductDetailInput: CreateProductDetailInput!
  productSubCategoryId: String!
}

input CreateProductDetailInput {
  gender: String!
  season: String!
  size: String!
  brand: String!
  origin: String!
  stock: Int!
  color: String!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  createProductDetailInput: CreateProductDetailInput
  productSubCategoryId: String
}

input CreateUserInput {
  password: String!
  email: String!
  phone: String!
  address: String!
  personal: String!
  nickname: String!
  profilePhoto: String!
  isPhoto: Boolean!
  firstMessage: String!
}

input UpdateUserInput {
  password: String
  email: String
  phone: String
  address: String
  personal: String
  nickname: String
  profilePhoto: String
  isPhoto: Boolean
  firstMessage: String
}